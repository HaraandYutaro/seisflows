#!/usr/bin/env python

import argparse
import sys

import os
from seisflows.tools import unix, tools
from seisflows.config import config, names, tilde_expand, Dict
from seisflows.tools.tools import loadpy, loadyaml


def getargs():
    parser = argparse.ArgumentParser()

    parser.add_argument('--workdir', nargs='?',
        default=os.getcwd())

    parser.add_argument('--parameter_file', nargs='?',
        default='parameters.yaml')

    parser.add_argument('--path_file', nargs='?',
        default='paths.yaml')

    return parser.parse_args()


if __name__ == "__main__":
    # Same as sfsubmit
    args = getargs()

    # check input files
    if not os.path.exists(args.parameter_file) or\
       not os.path.exists(args.path_file):
       # fall back to legacy filenames
        if os.path.exists('parameters.py') and os.path.exists('paths.py'):
            args.parameter_file = 'parameters.py'
            args.path_file = 'paths.py'
        elif os.path.exists('parameters.yaml'):
            args.parameter_file = 'parameters.yaml'
        else:
            raise Exception('Input files not found.')

    # Dynamically assign load functions
    if '.py' in args.parameter_file:
        load = loadpy
    else:
        load = loadyaml

    # register parameters
    parameters = load(args.parameter_file)
    sys.modules['seisflows_parameters'] = Dict(parameters)

    # register paths, they should have been checked by sfsubmit
    if os.path.exists('paths.py'):
        paths = tilde_expand(load(args.path_file))
    elif 'PATHS' in parameters:
        paths = tilde_expand(parameters['PATHS'])

    sys.modules['seisflows_paths'] = Dict(paths)

    unix.mkdir(args.workdir)
    unix.cd(args.workdir)

    # reload objects
    for name in names:
        fullfile = os.path.join(args.workdir, 'output', 'seisflows_'+name+'.p')
        sys.modules['seisflows_'+name] = tools.loadobj(fullfile)

    # parameter checking
    for name in names:
        sys.modules['seisflows_'+name].check()

    # submit workflow
    workflow = sys.modules['seisflows_workflow']
    system = sys.modules['seisflows_system']
    system.submit(workflow)


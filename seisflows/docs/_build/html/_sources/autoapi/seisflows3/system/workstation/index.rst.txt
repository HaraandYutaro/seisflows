:py:mod:`seisflows3.system.workstation`
=======================================

.. py:module:: seisflows3.system.workstation

.. autoapi-nested-parse::

   This is a subclass seisflows.system.workstation
   Provides utilities for submitting jobs in serial on a single machine



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   seisflows3.system.workstation.Workstation




Attributes
~~~~~~~~~~

.. autoapisummary::

   seisflows3.system.workstation.PAR
   seisflows3.system.workstation.PATH


.. py:data:: PAR
   

   

.. py:data:: PATH
   

   

.. py:class:: Workstation(*args, **kwargs)

   Bases: :py:obj:`custom_import`\ (\ :py:obj:`'system'`\ , :py:obj:`'base'`\ )

   Run tasks in a serial fashion on a single local machine

   .. py:attribute:: logger
      

      

   .. py:method:: required(self)
      :property:

      A hard definition of paths and parameters required by this class,
      alongside their necessity for the class and their string explanations.


   .. py:method:: check(self, validate=True)

      Checks parameters and paths


   .. py:method:: submit(self)

      Submits the main workflow job


   .. py:method:: run(self, classname, method, single=False, **kwargs)

      Executes task multiple times in serial.

      .. note::
          kwargs will be passed to the underlying `method` that is called

      :type classname: str
      :param classname: the class to run
      :type method: str
      :param method: the method from the given `classname` to run
      :type single: bool
      :param single: run a single-process, non-parallel task, such as
          smoothing the gradient, which only needs to be run by once.
          This will change how the job array and the number of tasks is
          defined, such that the job is submitted as a single-core job to
          the system.


   .. py:method:: taskid(self)

      Provides a unique identifier for each running task, which should be set
      by the 'run'' command.

      :rtype: int
      :return: returns the os environment variable SEISFLOWS_TASKID which is
          set by run() to label each of the currently
          running processes on the SYSTEM.




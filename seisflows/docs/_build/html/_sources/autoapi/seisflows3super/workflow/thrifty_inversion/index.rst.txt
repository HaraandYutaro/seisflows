:py:mod:`seisflows3-super.workflow.thrifty_inversion`
=====================================================

.. py:module:: seisflows3-super.workflow.thrifty_inversion

.. autoapi-nested-parse::

   Thrifty: using resources carefully and not wastefully

   A thrifty inversion skips the costly intialization step (i.e., forward
   simulations and misfit quantification) if the final forward simulations from
   the previous iteration's line search can be used in the current one.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   seisflows3-super.workflow.thrifty_inversion.ThriftyInversion




Attributes
~~~~~~~~~~

.. autoapisummary::

   seisflows3-super.workflow.thrifty_inversion.PAR
   seisflows3-super.workflow.thrifty_inversion.PATH
   seisflows3-super.workflow.thrifty_inversion.optimize


.. py:data:: PAR
   

   

.. py:data:: PATH
   

   

.. py:data:: optimize
   

   

.. py:class:: ThriftyInversion

   Bases: :py:obj:`custom_import`\ (\ :py:obj:`'workflow'`\ , :py:obj:`'inversion'`\ )

   Thrifty inversion which attempts to save resources by re-using previous
   line search results for the current iteration.

   .. py:attribute:: logger
      

      

   .. py:method:: check(self, validate=True)

      Checks parameters and paths


   .. py:method:: initialize(self)

      If line search can be carried over, skip initialization step
      Or if manually starting a new run, start with normal inversion init


   .. py:method:: clean(self)

      Determine if forward simulation from line search can be carried over.
      We assume clean() is the final flow() argument so that we can update
      the thrifty status here.


   .. py:method:: update_status(self)

      Determine if line search forward simulation can be carried over based
      on a number of criteria




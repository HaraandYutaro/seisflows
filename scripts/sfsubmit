#!/usr/bin/env python
"""
This script submits a new Seisflows workflow.

This script needs to be run in a directory containing `parameters.yaml` which
should contain user defined paths and parameters to be used in the workflow
"""
import os
import sys
import argparse

from os.path import exists
from seisflows.tools import unix
from seisflows.config import config, tilde_expand, Dict
from seisflows.tools.tools import loadyaml
        
           
def getargs():
    """
    Get User defined arguments, or assign defaults

    :rtype: argparse.ArgumentParser()
    :return: User defined or default arguments
    """
    parser = argparse.ArgumentParser()

    parser.add_argument('--workdir', nargs='?', default=os.getcwd())

    parser.add_argument('--parameter_file', nargs='?',
                        default='parameters.yaml')

    return parser.parse_args()
    
    
if __name__ == "__main__":
    args = getargs()
    
    # Check if the filepaths exist
    if not os.path.exists(args.parameter_file):
        raise Exception(f"Parameter file not found: {args.parameter_file}")

    # Register parameters
    parameters = loadyaml(args.parameter_file)
    sys.modules['seisflows_parameters'] = Dict(parameters)

    # Register paths, they should have been checked by sfsubmit
    paths = tilde_expand(parameters['PATHS'])
    sys.modules['seisflows_paths'] = Dict(paths)

    # Check that paths exist
    paths_dont_exist = []
    for key, path in paths.items():
        if (key in ['OUTPUT', 'SCRATCH', 'PYATOA_IO']) or (path == ''):
            continue
        if not os.path.exists(path):
            paths_dont_exist.append(path) 
    if paths_dont_exist:
        print("The following paths do not exist:")
        for path_ in paths_dont_exist:
            print(f"\t{path_}")
        sys.exit()

    # If paths exist, pass to modules
    sys.modules['seisflows_paths'] = Dict(paths)
    unix.mkdir(args.workdir)
    unix.cd(args.workdir)

    # Submit workflow
    config()
    workflow = sys.modules['seisflows_workflow']
    system = sys.modules['seisflows_system']

    system.submit(workflow)


:py:mod:`seisflows3.tools.graphics`
===================================

.. py:module:: seisflows3.tools.graphics

.. autoapi-nested-parse::

   Visualization tools for Seisflows



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   seisflows3.tools.graphics.plot_gll
   seisflows3.tools.graphics.plot_vector
   seisflows3.tools.graphics.plot_section
   seisflows3.tools.graphics._convert_to_array
   seisflows3.tools.graphics._cscale
   seisflows3.tools.graphics._get_time
   seisflows3.tools.graphics._get_offsets
   seisflows3.tools.graphics.get_regular_ticks



.. py:function:: plot_gll(x, y, z)

   Plots values on 2D unstructured GLL mesh
   :type x: np.array
   :param x: x values of GLL mesh
   :type y: np.array
   :param y: y values of GLL mesh
   :type z: np.array
   :param z: z values of GLL mesh


.. py:function:: plot_vector(t, v, xlabel='', ylabel='', title='')

   Plots a vector or time series.
   If dimensions of v are greater than 2, raises ValueError

   :type t: np.ndarray
   :param t: Time axis for potting
   :type v: np.ndarray
   :param v: Vector or time series to plot, ndims = 1/2
   :type xlabel: str
   :param xlabel: x axis label
   :type ylabel: str
   :param ylabel: y axis label
   :type title: str
   :param title: plot title


.. py:function:: plot_section(stream, ax=None, cmap='seismic', clip=100, title='', x_interval=1.0, y_interval=1.0)

   Plots a seismic section from an Obspy stream.

   Parameters
   ----------
   stream: Obspy stream object
       Obspy stream object created from a SU data file
   ax: Matplotlib Axes object
       Optional axis object
   cmap: str
       Matplotlib colormap option.
   clip: float
       Percentage value (0-100) for amplitude clipping
   title: str
       plot title
   x_interval: float
       Offset axis tick interval in km
   y_interval: float
       Time axis tick interval in km

   Raises
   ------
   NotImplementedError
       If stream object does not have SU format


.. py:function:: _convert_to_array(stream)

   Extracts trace data from an obspy stream and returns a 2D array.

   Parameters
   ----------
   stream: Obspy stream object
       Stream storing trace data

   Returns
   -------
   output: ndarray, ndim=2
       Returns an (nt*nr) array. nt and nr are the number of sample points
       and number of traces respectively. Assumes trace lengths are equal
       for all traces.

   Raises
   ------
   TypeError
       If stream is not an obspy stream


.. py:function:: _cscale(v, clip=100)

   Return limits for colormap.
       


.. py:function:: _get_time(stream)

   Get fixed time vector for stream object.
       


.. py:function:: _get_offsets(stream)

   Return offsets.
       


.. py:function:: get_regular_ticks(v, interval)

   Returns regular tick intervals.
       



:py:mod:`seisflows3.tests.test_system`
======================================

.. py:module:: seisflows3.tests.test_system

.. autoapi-nested-parse::

   Test suite for the SeisFlows3 SYSTEM module, which controls interaction with
   various compute systems



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   seisflows3.tests.test_system.copy_par_file
   seisflows3.tests.test_system.sfinit
   seisflows3.tests.test_system.test_setup
   seisflows3.tests.test_system.test_checkpoint
   seisflows3.tests.test_system.test_run_system_workstation



Attributes
~~~~~~~~~~

.. autoapisummary::

   seisflows3.tests.test_system.TEST_DIR
   seisflows3.tests.test_system.REPO_DIR


.. py:data:: TEST_DIR
   

   

.. py:data:: REPO_DIR
   

   

.. py:function:: copy_par_file(tmpdir)

   Copy the template parameter file into the temporary test directory
   :rtype: str
   :return: location of the parameter file


.. py:function:: sfinit(tmpdir, copy_par_file)

   Re-used function that will initate a SeisFlows3 working environment in
   sys modules
   :return:


.. py:function:: test_setup(sfinit)

   Make sure that system.base.setup() creates the desired directory structure
   and log files.

   :param sfinit:
   :param modules:
   :return:


.. py:function:: test_checkpoint(sfinit)

   Check that output pickle files are created during a checkpoint and that
   kwargs are saved


.. py:function:: test_run_system_workstation(sfinit)

   Ensure that workstation.run() simply runs a function as we would expect



:py:mod:`seisflows3.tests.test_modules`
=======================================

.. py:module:: seisflows3.tests.test_modules

.. autoapi-nested-parse::

   General test suite for all SeisFlows3 modules. Defines required parameters and
   functions for each of the modules, tests importing each of the modules and that
   each of the required parameters and functions exist. A sort of first-pass test
   which makes sure the package is set up correctly.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   seisflows3.tests.test_modules.copy_par_file
   seisflows3.tests.test_modules.sfinit
   seisflows3.tests.test_modules.test_import
   seisflows3.tests.test_modules.test_required_parameters_exist
   seisflows3.tests.test_modules.test_required_functions_exist
   seisflows3.tests.test_modules.test_setup



Attributes
~~~~~~~~~~

.. autoapisummary::

   seisflows3.tests.test_modules.required_structure
   seisflows3.tests.test_modules.TEST_DIR
   seisflows3.tests.test_modules.REPO_DIR


.. py:data:: required_structure
   

   

.. py:data:: TEST_DIR
   

   

.. py:data:: REPO_DIR
   

   

.. py:function:: copy_par_file(tmpdir)

   Copy the template parameter file into the temporary test directory
   :rtype: str
   :return: location of the parameter file


.. py:function:: sfinit(tmpdir, copy_par_file)

   Re-used function that will initate a SeisFlows3 working environment in
   sys modules
   :return:


.. py:function:: test_import(sfinit)

   Test code by importing all available classes for this module.
   If any of these fails then the module itself has some code error
   (e.g., syntax errors, inheritance errors).


.. py:function:: test_required_parameters_exist(sfinit)

   Ensure that the required parameters are set in all the classes/subclasses
   That is, that the parameters defined above in REQUIRED_PARAMETERS have been
   defined by each SYSTEM class


.. py:function:: test_required_functions_exist(sfinit)

   Make sure that the named, required functions exist within the class
   Do not execute just make sure they're defined, because they will be
   expected by other modules


.. py:function:: test_setup(sfinit, modules)

   Test the expected behavior of each of the rqeuired functions.

   Setup: make sure that setup creates the necessary directory structure

   :param sfinit:
   :param modules:
   :return:



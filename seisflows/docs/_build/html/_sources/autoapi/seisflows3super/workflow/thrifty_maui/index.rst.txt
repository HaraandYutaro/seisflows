:py:mod:`seisflows3-super.workflow.thrifty_maui`
================================================

.. py:module:: seisflows3-super.workflow.thrifty_maui

.. autoapi-nested-parse::

   This is a subclass seisflows.workflow.InversionMaui



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   seisflows3-super.workflow.thrifty_maui.ThriftyMaui




Attributes
~~~~~~~~~~

.. autoapisummary::

   seisflows3-super.workflow.thrifty_maui.PAR
   seisflows3-super.workflow.thrifty_maui.PATH
   seisflows3-super.workflow.thrifty_maui.system
   seisflows3-super.workflow.thrifty_maui.solver
   seisflows3-super.workflow.thrifty_maui.optimize
   seisflows3-super.workflow.thrifty_maui.preprocess
   seisflows3-super.workflow.thrifty_maui.postprocess


.. py:data:: PAR
   

   

.. py:data:: PATH
   

   

.. py:data:: system
   

   

.. py:data:: solver
   

   

.. py:data:: optimize
   

   

.. py:data:: preprocess
   

   

.. py:data:: postprocess
   

   

.. py:class:: ThriftyMaui(*args, **kwargs)

   Bases: :py:obj:`custom_import`\ (\ :py:obj:`'workflow'`\ , :py:obj:`'thrifty_inversion'`\ )

   Waveform thrify inversion class specifically for running jobs on the
   New Zealand HPC cluster Maui.

   On Maui, Anaconda is only available on an ancillary cluster, Maui_ancil,
   so jobs involving the preprocessing module must be called through a
   separate system run call.

   .. py:method:: check(self)

      Ensure that the correct submodules are specified, otherwise
      this workflow won't function properly.


   .. py:method:: setup(self)

      Lays groundwork for inversion by running setup() functions for the
      involved sub-modules, and generating synthetic true data if necessary,
      and generating the pre-requisite database files. Should only be run once
      at the iteration 1


   .. py:method:: evaluate_function(self, path, suffix)

      Performs forward simulation, and evaluates the objective function.

      Differs from Inversion.evaluate_function() as it splits the forward
      problem and misfit quantification into two separate system calls,
      rather than a single system call.

      :type path: str
      :param path: path in the scratch directory to use for I/O
      :type suffix: str
      :param suffix: suffix to use for I/O




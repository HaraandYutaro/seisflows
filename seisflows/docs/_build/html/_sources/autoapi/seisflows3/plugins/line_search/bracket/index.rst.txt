:py:mod:`seisflows3.plugins.line_search.bracket`
================================================

.. py:module:: seisflows3.plugins.line_search.bracket

.. autoapi-nested-parse::

   This is the subclass class for seisflows.plugins.line_search.bracket



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   seisflows3.plugins.line_search.bracket.Bracket




.. py:class:: Bracket(**kwargs)

   Bases: :py:obj:`seisflows3.plugins.line_search.base.Base`

   Implements bracketing line search, which attempts to find a step length
   corresponding to misfit reduction, and a misfit corresponding to misfit
   increase, so that the optimization procedure can scale the step length
   in future iterations.

   Variables Descriptions:
       x: list of step lenths from current line search
       f: correpsonding list of function values
       gtg: dot product of gradient with itself
       gtp: dot product of gradient and search direction

   Status codes
       status > 0  : finished
       status == 0 : not finished
       status < 0  : failed

   .. py:attribute:: logger
      

      

   .. py:method:: calculate_step(self)

      Determines step length (alpha) and search status (status)


   .. py:method:: _check_bracket(step_lens, func_vals)
      :staticmethod:

      Checks if minimum has been bracketed

      Looks at the minimum of the misfit values calculated through eval func
      to see if the misfit has been reduced w.r.t the initial misfit

      :type step_lens: numpy.array
      :param step_lens: an array of the step lengths taken during iteration
      :type func_vals: numpy.array
      :param func_vals: array of misfit values from eval func function
      :rtype: bool
      :return: status of function as a bool


   .. py:method:: _good_enough(self, step_lens, func_vals, thresh=np.log10(1.2))

      Checks if step length is reasonably close to quadratic estimate

      :type step_lens: np.array
      :param step_lens: an array of the step lengths taken during iteration
      :type func_vals: np.array
      :param func_vals: array of misfit values from eval func function
      :type thresh: numpy.float64
      :param thresh: threshold value for comparison against quadratic estimate
      :rtype: bool
      :return: status of function as a bool




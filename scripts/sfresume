#!/usr/bin/env python
"""
This script resumes the current Seisflows workflow by reloading the saved
Pickle objects that were generated by the workflow.

Paths and parameters should be specified in the file `parameters.yaml`
"""

import os
import sys
import argparse

from seisflows.tools import unix, tools
from seisflows.config import config, names, tilde_expand, Dict
from seisflows.tools.tools import loadyaml


def getargs():
    """
    Get User defined arguments, or assign defaults

    :rtype: argparse.ArgumentParser()
    :return: User defined or default arguments
    """
    parser = argparse.ArgumentParser()

    parser.add_argument('--workdir', nargs='?', default=os.getcwd())

    parser.add_argument('--parameter_file', nargs='?',
                        default='parameters.yaml')

    return parser.parse_args()


if __name__ == "__main__":
    args = getargs()

    # Check if the filepaths exist
    if not os.path.exists(args.parameter_file):
        raise Exception(f"Parameter file not found: {args.parameter_file}")

    # Register parameters
    parameters = loadyaml(args.parameter_file)
    sys.modules['seisflows_parameters'] = Dict(parameters)

    # Register paths, they should have been checked by sfsubmit
    paths = tilde_expand(parameters['PATHS'])
    sys.modules['seisflows_paths'] = Dict(paths)

    unix.mkdir(args.workdir)
    unix.cd(args.workdir)

    # Reload objects from Pickle files
    for name in names:
        fullfile = os.path.join(
            args.workdir, "output", "seisflows_" + name + ".p")
        sys.modules['seisflows_' + name] = tools.loadobj(fullfile)

    # Check parameters
    for name in names:
        sys.modules['seisflows_' + name].check()

    # Submit workflow
    workflow = sys.modules['seisflows_workflow']
    system = sys.modules['seisflows_system']

    system.submit(workflow)

